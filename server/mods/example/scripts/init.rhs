create_block("example:stone", |p|{
    create_cube("example:stone","example:stone","example:stone","example:stone","example:stone","example:stone")
}).register_item("example:stone_block","Stone Block").breaking_tool(ToolType::Pickaxe,1.).register();
create_block("example:water", |p|{
    create_cube("example:water","example:water","example:water","example:water","example:water","example:water").transparent(true).render_data(1).fluid(true)
}).register();
create_block("example:log", |p|{
    create_cube("example:log_side","example:log_side","example:log_side","example:log_side","example:log_base","example:log_base").hangs_on(p.hang_side)
}).breaking_tool(ToolType::Axe,1.).register_item("example:log_block","Log Block").add_property_face("hang_side").loot("example:log").register();
create_block("example:grass", |p|{
    create_cube("example:grass_side","example:grass_side","example:grass_side","example:grass_side","example:grass","example:dirt")
}).register_item("example:grass_block","Grass Block").breaking_tool(ToolType::Shovel,1.).register();
create_block("example:dirt", |p|{
    create_cube("example:dirt","example:dirt","example:dirt","example:dirt","example:dirt","example:dirt")
}).register_item("example:dirt_block","Dirt Block").breaking_tool(ToolType::Shovel,1.).register();
create_block("example:sand", |p|{
    create_cube("example:sand","example:sand","example:sand","example:sand","example:sand","example:sand")
}).register_item("example:sand_block","Sand Block").breaking_tool(ToolType::Shovel,1.).register();
create_block("example:leaves", |p|{
    create_cube("example:leaves","example:leaves","example:leaves","example:leaves","example:leaves","example:leaves").transparent(true)
}).register_item("example:leaves_block","Leaves Block").register();
create_block("example:test_model", |p|{
    create_air().dynamic("example:player","example:player").dynamic_add_animation("walk").dynamic_add_item("main_hand")
}).data_container().register_item("example:mode_test_block","Model Test Block").register();
create_block("example:barrel", |p|{
    create_cube("example:barrel","example:barrel","example:barrel","example:barrel","example:barrel","example:barrel")
}).register_item("example:barrel_block","Barrel Block").data_container().register();
create_block("example:malachite", |p|{
    create_cube("example:malachite","example:malachite","example:malachite","example:malachite","example:malachite","example:malachite")
}).breaking_tool(ToolType::Pickaxe,1.).loot("example:malachite_ore").register_item("example:malachite_block","Malachite Block").register();
create_block("example:malachite_rock", |p|{
    create_static("example:rock","example:malachite").no_collide()
}).loot("example:malachite_rock").register_item("example:malachite_rock","Malachite Rock").register();
create_block("example:rock", |p|{
    create_static("example:rock","example:stone").no_collide()
}).loot("example:rock").register();
create_block("example:grass_foliage", |p|{
    create_foliage("example:grass_foliage","example:grass_foliage","example:grass_foliage","example:grass_foliage").render_data(2).no_collide()
}).loot("example:grass_foliage").register();
create_block("example:branch", |p|{
    create_static("example:branch","example:log_side").no_collide().rotation(p.facing)
}).loot("example:branch").add_property_horizontal_face("facing").register();
create_block("example:campfire", |p|{
    create_air().dynamic("example:campfire","example:campfire").dynamic_add_item("main")
}).machine("example:campfire",1.,1).register_item("example:campfire", "Campfire").data_container().register();
create_item("example:plank").client_model_texture("example:plank").client_name("Plank").register();
create_item("example:selection_wand").on_right_click(|player,target|{
    if type_of(target) == "BlockPosition"{
        if !player.is_shifting(){
            player.insert_data_point("example:first_selection", target);
            player.send_message("first point selected at " + target);
        } else {
            player.insert_data_point("example:second_selection", target);
            player.send_message("second point selected at " + target);
        }
    }
}).register();
register_event("bb:command", |player,command|{
    if command[0] == "/copy"{
        let first_selection = player.get_data_point("example:first_selection");
        let second_selection = player.get_data_point("example:second_selection");
        if type_of(first_selection) == (){
            player.send_message("first point not selected");
            return;
        }
        if type_of(second_selection) == (){
            player.send_message("second point not selected");
            return;
        }
        player.insert_data_point("example:structure_selection", player.get_world().get_structure(first_selection,second_selection,player.get_position().to_block_position()));
        player.send_message("structure saved");
    }
    if command[0] == "/export"{
        let block_structure = player.get_data_point("example:structure_selection");
        block_structure.export_structure(command[1] + ".json");
        player.send_message("structure exported");
    }
});

create_item("example:copper_axe").client_name("Copper Axe").client_model_texture("example:copper_axe").tool(64, 1., 1.).tool_add_type(ToolType::Axe).register();
create_item("example:copper_shovel").client_name("Copper Shovel").client_model_texture("example:copper_shovel").tool(64, 1., 1.).tool_add_type(ToolType::Shovel).register();
create_item("example:copper_pickaxe").client_name("Copper Pickaxe").client_model_texture("example:copper_pickaxe").tool(64, 1., 1.).tool_add_type(ToolType::Pickaxe).register();
create_item("example:malachite_chunk").client_name("Malachite Ore Chunk").client_model_texture("example:malachite_chunk").register();
create_item("example:rock").client_name("Rock").client_model_texture("example:stone_chunk").register();
create_item("example:raw_beef").client_name("Raw Beef").client_model_texture("example:raw_beef").register();
create_item("example:cooked_beef").client_name("Cooked Beef").client_model_texture("example:cooked_beef").register();

create_item("example:sharpened_rock").client_name("Sharpened Rock").client_model_texture("example:sharpened_rock").tool(32, 1., 1.).tool_add_type(ToolType::Knife).register();
create_item("example:cut_grass").client_name("Cut Grass").client_model_texture("example:cut_grass").register();
create_item("example:grass_twine").client_name("Grass Twine").client_model_texture("example:grass_twine").register();
create_item("example:stick").client_name("Stick").client_model_texture("example:stick").register();

create_biome("example:forest", "example:grass","example:dirt","example:stone","example:water").spline_add_height(-1., 0.).spline_add_height(0., 1.).add_structure(0.2, "example:grass_foliage").add_structure(0.02, "example:rock").add_structure(0.02, "example:branch").add_structure(0.0002, "example:malachite_chunk").add_structure(0.02, "example:tree").register();
create_biome("example:ocean", "example:sand","example:sand","example:stone","example:water").spline_add_height(-1., 1.).spline_add_height(0., 0.).register();

create_entity("bb:player").client_viewmodel("example:viewmodel", "").client_viewmodel_add_item("main_hand").client_viewmodel_add_animation("equip").client_model("example:player","example:player").client_add_item("main_hand").client_hitbox(0.6, 1.7, 0.6).register();

register_image("example:stone", "images/stone.png");
register_image("example:water", "images/water.png");
register_image("example:log_side", "images/log_side.png");
register_image("example:log_base", "images/log_base.png");
register_image("example:grass", "images/grass.png");
register_image("example:grass_side", load_image("images/dirt.png").overlay(load_image("images/grass_side_mask.png").multiply(load_image("images/grass.png"))));
register_image("example:malachite", load_image("images/stone.png").overlay(load_image("images/ore_mask.png").color(create_color(6./255.,115./255.,52./255.,1.))));
register_image("example:dirt", "images/dirt.png");
register_image("example:leaves", "images/leaves.png");
register_image("example:sand", "images/sand.png");
register_image("example:barrel", "images/barrel.png");
register_image("example:plank", "images/plank.png");
register_image("example:copper_axe", "images/copper_axe.png");
register_image("example:copper_shovel", "images/copper_shovel.png");
register_image("example:copper_pickaxe", "images/copper_pickaxe.png");
register_image("bb:slot", "images/slot.png");
register_image("bb:cursor", "images/cursor.png");
register_image("example:malachite_chunk", load_image("images/stone_chunk.png").overlay(load_image("images/ore_chunk_mask.png").color(create_color(6./255.,115./255.,52./255.,1.))));
register_image("example:grass_foliage", "images/grass_foliage.png");
register_image("example:sharpened_rock", "images/sharpened_rock.png");
register_image("example:grass_twine", "images/grass_twine.png");
register_image("example:cut_grass", "images/cut_grass.png");
register_image("example:stone_chunk", "images/stone_chunk.png");
register_image("example:stick", "images/stick.png");
register_image("example:raw_beef", "images/raw_beef.png");
register_image("example:cooked_beef", "images/cooked_beef.png");

register_image("example:player", "images/player.png");
register_model("example:player", "models/player.bbm");
register_model("example:viewmodel", "models/viewmodel.bbm");

register_image("example:campfire", "images/campfire.png");
register_model("example:campfire", "models/campfire.bbm");

register_model("example:rock", "models/rock.bbm");
register_model("example:branch", "models/branch.bbm");


register_event("bb:command", |player,command|{
    if command[0] == "creative"{
        switch command[1]{
            "true" => {
                player.abilities().creative(true);
                player.send_message("You are now in creative");
            }
            "false" => {
                player.abilities().creative(false);
                player.send_message("You are no longer in creative");
            }
            _ => {}
        }
    }
    if command[0] == "movetype"{
        switch command[1]{
            "noclip" => {
                player.abilities().movement_type(MovementType::NoClip);
                player.send_message("You are now in noclip");
            }
            "fly" => {
                player.abilities().movement_type(MovementType::Fly);
                player.send_message("You are now flying");
            }
            "normal" => {
                player.abilities().movement_type(MovementType::Normal);
                player.send_message("You are now moving normally");
            }
            _ => {}
        }
    }
    if command[0] == "speed"{
        let speed = parse_float(command[1]);
        player.abilities().speed(speed);
        player.send_message("You are moving at speed of " + speed);
    }
});

register_event("bb:player_join", |player|{player.abilities().creative(true);player.abilities().movement_type(MovementType::Normal);player.abilities().speed(1.);});