create_block(|p|{
    create_cube("overworld:stone","overworld:stone","overworld:stone","overworld:stone","overworld:stone","overworld:stone")
}).register("overworld:stone").register_item("overworld:stone_block","Stone Block");
create_block(|p|{
    create_cube("overworld:water","overworld:water","overworld:water","overworld:water","overworld:water","overworld:water").transparent(true).render_data(1).fluid(true)
}).register("overworld:water");
create_block(|p|{
    create_cube("overworld:grass_side","overworld:grass_side","overworld:grass_side","overworld:grass_side","overworld:grass","overworld:dirt")
}).register("overworld:grass").register_item("overworld:grass_block","Grass Block");
create_block(|p|{
    create_cube("overworld:savanna_grass_side","overworld:savanna_grass_side","overworld:savanna_grass_side","overworld:savanna_grass_side","overworld:savanna_grass","overworld:dirt")
}).register("overworld:savanna_grass").register_item("overworld:savanna_grass_block","Savanna Grass Block");
create_block(|p|{
    create_cube("overworld:dirt","overworld:dirt","overworld:dirt","overworld:dirt","overworld:dirt","overworld:dirt")
}).register("overworld:dirt").register_item("overworld:dirt_block","Dirt Block");
create_block(|p|{
    create_cube("overworld:sand","overworld:sand","overworld:sand","overworld:sand","overworld:sand","overworld:sand")
}).register("overworld:sand").register_item("overworld:sand_block","Sand Block");
create_block(|p|{
    create_cube("overworld:leaves","overworld:leaves","overworld:leaves","overworld:leaves","overworld:leaves","overworld:leaves").transparent(true)
}).register("overworld:leaves").register_item("overworld:leaves_block","Leaves Block");
create_block(|p|{
    create_static("overworld:rock","overworld:stone", transform_rotation_from_face(if p.rotated {Face::Left} else {Face::Front})).no_collide()
}).add_property_bool("rotated").register("overworld:rock");
create_block(|p|{
    create_foliage("overworld:grass_foliage","overworld:grass_foliage","overworld:grass_foliage","overworld:grass_foliage").render_data(2).no_collide()
}).register("overworld:grass_foliage");
create_block(|p|{
    create_foliage("overworld:savanna_grass_foliage","overworld:savanna_grass_foliage","overworld:savanna_grass_foliage","overworld:savanna_grass_foliage").render_data(2).no_collide()
}).register("overworld:savanna_grass_foliage");
create_block(|p|{
    create_static("overworld:branch","overworld:log_side", transform_rotation_from_face(p.facing.to_face())).no_collide()
}).add_property_horizontal_face("facing").register("overworld:branch");
create_block(|p|{
    if p.size == 8{
        create_cube("overworld:log_side","overworld:log_side","overworld:log_side","overworld:log_side","overworld:log_side","overworld:log_side")
    } else {
        let model = create_static("overworld:log_" + (p.size * 2).to_string(),"overworld:log_side");
        if p.front{
            model.add_static_model("overworld:log_connector_" + (p.size * 2).to_string(),"overworld:log_side", transform_rotation_from_face_up(Face::Front));
        }
        if p.back{
            model.add_static_model("overworld:log_connector_" + (p.size * 2).to_string(),"overworld:log_side", transform_rotation_from_face_up(Face::Back));
        }
        if p.left{
            model.add_static_model("overworld:log_connector_" + (p.size * 2).to_string(),"overworld:log_side", transform_rotation_from_face_up(Face::Left));
        }
        if p.right{
            model.add_static_model("overworld:log_connector_" + (p.size * 2).to_string(),"overworld:log_side", transform_rotation_from_face_up(Face::Right));
        }
        if p.up{
            model.add_static_model("overworld:log_connector_" + (p.size * 2).to_string(),"overworld:log_side", transform_rotation_from_face_up(Face::Up));
        }
        if p.down{
            model.add_static_model("overworld:log_connector_" + (p.size * 2).to_string(),"overworld:log_side", transform_rotation_from_face_up(Face::Down));
        }
        return model;
    }
}).add_property_number("size", 1..=8).add_property_bool("front").add_property_bool("back").add_property_bool("left").add_property_bool("right").add_property_bool("up").add_property_bool("down")
.on_right_click(|player|{
    let hand_item = player.get_entity().get_hand_item();
    if hand_item == (){
        return;
    }
    if player.get_entity().get_hand_item().get_id() != "overworld:log_block"{
        return;
    }
    let size = this.get_block().get_property("size") + 1;
    if size > 8{
        size = 1;
    }
    this.set_block(BlockState("overworld:log").with_property("size", size));
    return InteractionResult::Consumed;
})
.on_neighbor_update(||{
    let initial_state = this.get_block_load();
    let state = initial_state;
    let tag = Tag("overworld:logs_connecting");
    state = state.with_property("front", tag.contains(this.offset_by_face(Face::Front).get_block_load()));
    state = state.with_property("back", tag.contains(this.offset_by_face(Face::Back).get_block_load()));
    state = state.with_property("left", tag.contains(this.offset_by_face(Face::Left).get_block_load()));
    state = state.with_property("right", tag.contains(this.offset_by_face(Face::Right).get_block_load()));
    state = state.with_property("up", tag.contains(this.offset_by_face(Face::Up).get_block_load()));
    state = state.with_property("down", tag.contains(this.offset_by_face(Face::Down).get_block_load()));
    if state != initial_state{
        this.set_block(state);
    }
}).register("overworld:log").register_item("overworld:log_block","Log Block");
create_block(|p|{
    let size = 4;
    let model = create_static("overworld:log_" + (size * 2).to_string(),"overworld:cactus");
    if p.front{
        model.add_static_model("overworld:log_connector_" + (size * 2).to_string(),"overworld:cactus", transform_rotation_from_face_up(Face::Front));
    }
    if p.back{
        model.add_static_model("overworld:log_connector_" + (size * 2).to_string(),"overworld:cactus", transform_rotation_from_face_up(Face::Back));
    }
    if p.left{
        model.add_static_model("overworld:log_connector_" + (size * 2).to_string(),"overworld:cactus", transform_rotation_from_face_up(Face::Left));
    }
    if p.right{
        model.add_static_model("overworld:log_connector_" + (size * 2).to_string(),"overworld:cactus", transform_rotation_from_face_up(Face::Right));
    }
    if p.up{
        model.add_static_model("overworld:log_connector_" + (size * 2).to_string(),"overworld:cactus", transform_rotation_from_face_up(Face::Up));
    }
    if p.down{
        model.add_static_model("overworld:log_connector_" + (size * 2).to_string(),"overworld:cactus", transform_rotation_from_face_up(Face::Down));
    }
    return model;
}).add_property_bool("front").add_property_bool("back").add_property_bool("left").add_property_bool("right").add_property_bool("up").add_property_bool("down")
.on_neighbor_update(||{
    let initial_state = this.get_block_load();
    let state = initial_state;
    let tag = Tag("overworld:cactus_connecting");
    state = state.with_property("front", tag.contains(this.offset_by_face(Face::Front).get_block_load()));
    state = state.with_property("back", tag.contains(this.offset_by_face(Face::Back).get_block_load()));
    state = state.with_property("left", tag.contains(this.offset_by_face(Face::Left).get_block_load()));
    state = state.with_property("right", tag.contains(this.offset_by_face(Face::Right).get_block_load()));
    state = state.with_property("up", tag.contains(this.offset_by_face(Face::Up).get_block_load()));
    state = state.with_property("down", tag.contains(this.offset_by_face(Face::Down).get_block_load()));
    if state != initial_state{
        this.set_block(state);
    }
}).register("overworld:cactus").register_item("overworld:cactus_block","Cactus Block");

create_biome("overworld:forest", "overworld:grass","overworld:dirt","overworld:stone","overworld:water").spline_add_height(-1., 0.).spline_add_height(0., 1.).add_structure(0.2, "overworld:grass_foliage").add_structure(0.02, "overworld:rock").add_structure(0.02, "overworld:branch").add_structure(0.02, "overworld:tree").add_structure(0.002, "overworld:tree_big").register();
create_biome("overworld:savanna", "overworld:savanna_grass","overworld:dirt","overworld:stone","overworld:water").spline_add_height(-1., 0.).spline_add_height(0., 1.).spline_add_temperature(0.64, 0.).spline_add_temperature(0.65, 3.).add_structure(0.2, "overworld:savanna_grass_foliage").add_structure(0.02, "overworld:rock").add_structure(0.002, "overworld:tree_savanna").add_structure(0.0005, "overworld:big_rock").register();
create_biome("overworld:desert", "overworld:sand","overworld:sand","overworld:stone","overworld:water").spline_add_height(-1., 0.).spline_add_height(0., 1.).spline_add_temperature(0.64, 0.).spline_add_temperature(0.65, 3.).spline_add_moisture(0.51, 0.).spline_add_moisture(0.5, 20.).add_structure(0.02, "overworld:rock").add_structure(0.02, "overworld:cactus").register();
create_biome("overworld:beach", "overworld:sand","overworld:sand","overworld:sand","overworld:water").spline_add_height(-1., 0.).spline_add_height(0., 1.).spline_add_land(0.0, 100.).spline_add_land(0.02, 100.).spline_add_land(0.02001, 0.).add_structure(0.006, "overworld:rock").add_structure(0.002, "overworld:tree_palm").register();
create_biome("overworld:ocean", "overworld:sand","overworld:sand","overworld:stone","overworld:water").spline_add_height(-1., 1.).spline_add_height(0., 0.).register();

let forest_grass_colored = load_image("images/grass.png").color(create_color(24./255.,161./255.,19./255.,1.));
let savanna_grass_colored = load_image("images/grass.png").color(create_color(176./255.,154./255.,46./255.,1.));

register_image("overworld:stone", "images/stone.png");
register_image("overworld:water", "images/water.png");
register_image("overworld:log_side", "images/log_side.png");
register_image("overworld:log_base", "images/log_base.png");
register_image("overworld:grass", forest_grass_colored);
register_image("overworld:grass_side", load_image("images/dirt.png").overlay(load_image("images/grass_side_mask.png").multiply(forest_grass_colored)));
register_image("overworld:savanna_grass", savanna_grass_colored);
register_image("overworld:savanna_grass_side", load_image("images/dirt.png").overlay(load_image("images/grass_side_mask.png").multiply(savanna_grass_colored)));
register_image("overworld:dirt", "images/dirt.png");
register_image("overworld:leaves", "images/leaves.png");
register_image("overworld:sand", "images/sand.png");
register_image("overworld:cactus", "images/cactus.png");
register_image("overworld:grass_foliage", load_image("images/grass_foliage.png").color(create_color(14./255.,151./255.,09./255.,1.)));
register_image("overworld:savanna_grass_foliage", load_image("images/grass_foliage.png").color(create_color(198./255.,175./255.,50./255.,1.)));

register_model("overworld:rock", "models/rock.bbm");
register_model("overworld:branch", "models/branch.bbm");

for i in 1..=7{
    register_model("overworld:log_" + (i*2), "models/log_" + (i*2) + ".bbm");
    register_model("overworld:log_connector_" + (i*2), "models/log_connector_" + (i*2) + ".bbm");
}